name: Build and Deploy Application

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/MVPCustomFileChecker.yml'  # Trigger on changes to this workflow file
      - 'MVPCustomCheckerLibrary/**'
      - 'MVPCustomCheckerProcessor/**'

jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3 # Checks out your repository under $GITHUB_WORKSPACE

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'  # Adjust according to your project's requirements

    - name: Install EF Core CLI
      run: |
        dotnet tool install --global dotnet-ef
        echo "/home/tristan/.dotnet/tools" >> $GITHUB_PATH

    - name: Check PATH
      run: echo $PATH

    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: './MVPCustomCheckerProcessor/appsettings.json'
      env:
        ConnectionStrings.Database: ${{ secrets.CONNECTION_STRING }}
        Discord.Token: ${{ secrets.DISCORD_TOKEN }}
        
    - name: Restore dependencies
      run: dotnet restore $GITHUB_WORKSPACE/MVPCustomCheckerBot.sln
        
    - name: Create deployment directory
      run: |
        echo ${{ secrets.SUDOPWD }} | sudo -S mkdir -p /var/MVPCustomCheckerProcessor/
        echo ${{ secrets.SUDOPWD }} | sudo -S chown $USER:$USER /var/MVPCustomCheckerProcessor/

    - name: Build and Publish Project
      run: |
        dotnet publish $GITHUB_WORKSPACE/MVPCustomCheckerProcessor/MVPCustomCheckerProcessor.csproj -c Release -o /var/MVPCustomCheckerProcessor

    - name: Copy appsettings.json to deployment directory
      run: |
        cp $GITHUB_WORKSPACE/MVPCustomCheckerProcessor/appsettings.json /var/MVPCustomCheckerProcessor/

    - name: Apply EF Core Migrations
      run: dotnet ef database update --project $GITHUB_WORKSPACE/MVPCustomCheckerLibrary/MVPCustomCheckerLibrary.csproj
      working-directory: $GITHUB_WORKSPACE/MVPCustomCheckerProcessor
      env:
        ConnectionStrings__Database: ${{ secrets.CONNECTION_STRING }}
